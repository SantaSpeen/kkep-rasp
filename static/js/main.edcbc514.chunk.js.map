{"version":3,"sources":["js/services/KKEP.js","js/panel/Table.js","js/panel/Error.js","App.js","index.js"],"names":["TOKEN","getGroupByVKId","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","id","res","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","this","arguments","getRaspByGroup","_ref3","_callee3","group","_context3","_x2","useStyles","makeStyles","table","maxWidth","minWidth","RaspTable","state","loaded","spinner","rasp","error","_this2","setState","props","appState","then","t0","t1","t2","call","catch","err","colorScheme","backgroundColor","color","getRasp","_this3","classes","react_default","createElement","Group_default","TableContainer","component","Paper","style","getColor","align","toString","es6","mode","size","stretched","onClick","group_name","week","map","row","key","day_name","Table","className","TableHead","TableRow","TableCell","TableBody","pairs","isnull","p_num","p_prep","p_subj","replace","p_aud","React","Component","ErrorPage","href","App","undefined","VKConnectCallback","e","user","groupList","detail","type","bridge","unsubscribe","data","scheme","send","length","parseInt","group_num","name","document","getElementById","setAttribute","subscribe","console","log","isWebView","ScreenSpinner_default","Error","panel_Table","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.edcbc514.chunk.js","sourcesContent":["import bridge from '@vkontakte/vk-bridge';\nconst TOKEN = \"2450cda654b43f77aecad6a5950d672e\"\n\nexport const getGroupByVKId = async (id) =>{\n    const res = await fetch(`https://test.my.kkep.ru/api.php?method=get_group_by_vk&vk_id=` + id + `&token=` + TOKEN)\n    return await res.json()\n}\n\nexport const getRasp = async () => {\n    const user = await bridge.send('VKWebAppGetUserInfo')\n    const group = getGroupByVKId(user.id)\n    return fetch(`https://test.my.kkep.ru/api.php?method=get_stud_rasp&group=` + group + `&token=` + TOKEN)\n}\n\nexport const getRaspByGroup = async (group) => {\n    return fetch(`https://test.my.kkep.ru/api.php?method=get_stud_rasp&group=` + group + `&token=` + TOKEN)\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport {\n    Paper,\n    TableRow,\n    TableHead,\n    TableContainer,\n    TableCell,\n    TableBody,\n    Table\n} from '@material-ui/core';\n\nimport {Button, Div, PanelSpinner} from \"@vkontakte/vkui\";\nimport Group from \"@vkontakte/vkui/dist/components/Group/Group\";\nimport {getRaspByGroup} from \"../services/KKEP\";\n\nconst useStyles = makeStyles({\n    table: {\n        maxWidth: 250,\n        minWidth: 250,\n    },\n});\n\n\nclass RaspTable extends React.Component {\n\n    state = {\n        loaded: false,\n        spinner: true,\n        rasp: null,\n        error: null\n    }\n\n    getRasp(){\n        this.setState({loaded: false, spinner: true, error: null})\n        getRaspByGroup(this.props.appState.group)\n            .then(async (res) => this.setState({loaded: true, spinner: false, rasp: await res.json()}) )\n            .catch((err) => this.setState({loaded: false, spinner: false, error: err}) )\n    }\n\n    getColor(){\n        const black = {backgroundColor: \"#0a0a0a\", color: \"white\"}\n        if (this.props.appState.colorScheme === \"space_gray\")\n            return black\n    }\n\n    async componentDidMount() {\n        this.getRasp()\n    }\n\n    render() {\n        const classes = useStyles;\n\n        return (\n            <Group>\n                <TableContainer component={Paper} style={this.getColor()}>\n\n                    {this.state.error !== null && <div id='error'>\n                        <h3 style={{color: 'red'}} align=\"center\">Расписание не удалось получить</h3>\n                        <p align=\"center\"><small>{this.state.error.toString()}</small></p>\n                        <Div><Button mode=\"secondary\" size=\"l\" stretched={true} onClick={() => this.getRasp()}>Обновить</Button></Div>\n                    </div>}\n\n                    {this.state.spinner && <PanelSpinner/>}\n\n                    {this.state.loaded && <div id=\"loaded\">\n                        <h2 style={{color: 'cyan'}} align=\"center\">Группа: {this.props.appState.group_name} Неделя: {this.state.rasp[0].week}</h2>\n                            {this.state.rasp.map((row) => (<div key={row.day_name}>\n                                <h3 align='center'>{row.day_name}</h3>\n                                <Table className={classes.table} key={row.day_name}>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell align=\"left\" style={this.getColor()}>№</TableCell>\n                                            <TableCell align=\"center\" style={this.getColor()}>Преподаватель</TableCell>\n                                            <TableCell align=\"center\" style={this.getColor()}>Дисциплина</TableCell>\n                                            <TableCell align=\"center\" style={this.getColor()}>Ауд.</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {row.pairs.map((row) => ( row.isnull === \"0\" &&\n                                            <TableRow key={row.p_num}>\n                                                <TableCell align=\"left\" style={this.getColor()}>{row.p_num}</TableCell>\n                                                <TableCell align=\"center\" style={this.getColor()}>{row.p_prep}</TableCell>\n                                                <TableCell align=\"center\" style={this.getColor()}>{row.p_subj.replace(\"Ин. язык/Ин. язык\", \"Ин. язык\")}</TableCell>\n                                                <TableCell align=\"center\" style={this.getColor()}>{row.p_aud}</TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </div>))}\n                    </div>}\n\n                </TableContainer>\n            </Group>);\n    }\n\n}\n\nexport default RaspTable;\n","import React from 'react';\nimport {Div, Group, Link} from \"@vkontakte/vkui\";\n\nclass ErrorPage extends React.Component {\n\n    render() {\n        return (\n            <div>\n               <Group>\n                   <Div>\n                       <h2 align=\"center\" style={{color: \"red\"}}>Ошибка авторизации.</h2>\n                   </Div>\n               </Group>\n                <Group>\n                    <Div>\n                        <p align=\"center\">Если у вас нет ёще аккаунта в нашем колледже: <Link href=\"https://my.kkep.ru/\">зарегистрируйтесь</Link>.</p>\n                        <p align=\"center\">Если вы считаете, что это ошибка <Link href='https://vk.me/l.vindeta'>напишите разработчику</Link>.</p>\n                    </Div>\n                </Group>\n            </div>\n        )\n    }\n\n}\n\nexport default ErrorPage;","import React from 'react';\n\nimport bridge from '@vkontakte/vk-bridge';\nimport {Button, ConfigProvider, Panel, PanelHeader} from \"@vkontakte/vkui\";\n\nimport RaspTable from \"./js/panel/Table\";\nimport ErrorPage from \"./js/panel/Error\";\n\nimport ScreenSpinner from \"@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner\";\nimport {getGroupByVKId} from \"./js/services/KKEP\";\n\nclass App extends React.Component {\n\n    state = {\n        group: 0,\n        group_name: undefined,\n        error: false,\n        colorScheme: 'bright_light'\n    }\n\n    async componentDidMount() {\n\n        const VKConnectCallback = async (e) => {\n\n            if (e.detail.type === 'VKWebAppUpdateConfig') {\n                bridge.unsubscribe(VKConnectCallback);\n\n                const colorScheme = e.detail.data.scheme\n                const user = await bridge.send('VKWebAppGetUserInfo')\n                const groupList = await getGroupByVKId(user.id)\n\n                if (groupList.length < 5)\n                    this.setState({\n                        group: parseInt(groupList[0].group_num),\n                        group_name: groupList[0].name,\n                        colorScheme: colorScheme\n                    })\n                else\n                    this.setState({group: -1, error: true})\n\n                document.getElementById(\"body\").setAttribute(\"scheme\", colorScheme)\n\n            }\n        };\n\n        bridge.subscribe(VKConnectCallback);\n        await bridge.send('VKWebAppInit', {})\n\n        // const groupList = await getGroupByVKId(1)\n        // console.log(groupList)\n        // if (groupList.length < 5)\n        //     this.setState({\n        //         group: parseInt(groupList[0].group_num),\n        //         group_name: groupList[0].name,\n        //         colorScheme: 'bright_light'\n        //     })\n        // else\n        //     this.setState({group: -1, error: true})\n\n    }\n\n    render() {\n\n        console.log(this.state)\n\n        return (\n            <ConfigProvider isWebView={true} colorScheme={this.state.colorScheme}>\n\n                {this.state.group === 0 || this.state.group < 0 &&  <Panel id='check'>\n                    <PanelHeader>ККЭП</PanelHeader>\n\n                    {this.state.group === 0 &&<ScreenSpinner />}\n\n                    {this.state.group < 0 && <ErrorPage/>}\n\n                </Panel>}\n\n                {this.state.group > 0 &&  <Panel id=\"app\">\n                    <PanelHeader>Расписание</PanelHeader>\n                    <RaspTable appState={this.state}/>\n                </Panel>}\n\n            </ConfigProvider>\n        );\n    }\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './css/main.css';\n\nimport App from './App';\n\nReactDOM.render(\n        <App/>,\n    document.getElementById('root')\n);\n//import(\"./js/debug/eruda\").then(({ default: eruda }) => {}); //runtime download"],"sourceRoot":""}