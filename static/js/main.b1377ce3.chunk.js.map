{"version":3,"sources":["js/KKEP.js","js/panel/Table.js","App.js","index.js"],"names":["getGroupByVKId","id","data","fetch","then","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","json","sent","stop","_x","apply","this","arguments","catch","error","toString","console","log","undefined","getRasp","_ref2","_callee2","user","group","_context2","bridge","send","abrupt","useStyles","makeStyles","table","maxWidth","minWidth","RaspTable","state","loaded","spinner","rasp","_this2","setState","t0","t1","t2","call","err","props","colorScheme","backgroundColor","color","_this3","classes","react_default","createElement","Group_default","TableContainer","component","Paper","style","getColor","align","es6","mode","size","stretched","onClick","week","map","row","key","day_name","Table","className","TableHead","TableRow","TableCell","TableBody","pairs","isnull","p_num","p_prep","p_subj","replace","p_aud","React","Component","App","load","VKConnectCallback","e","detail","type","unsubscribe","scheme","document","getElementById","setAttribute","subscribe","prevProps","prevState","snapshot","_this$props","activeView","activeStory","activePanel","scrollPosition","pageScrollPosition","window","scroll","isWebView","panel_Table","ReactDOM","render","src_App","Promise","all","__webpack_require__","bind","default"],"mappings":"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","file":"static/js/main.b1377ce3.chunk.js","sourcesContent":["import bridge from '@vkontakte/vk-bridge';\nconst TOKEN = \"2450cda654b43f77aecad6a5950d672e\"\n\nexport const getGroupByVKId = (id) =>{\n    let data;\n    fetch(`https://test.my.kkep.ru/api.php?method=get_user&vk_id=` + id)\n        .then(async (res) => {data = await res.json()})\n        .catch((error) => {data = error.toString()})\n    console.log(data)\n    if (data!== undefined){\n        return data\n    }\n    return 36\n}\n\nexport const getRasp = async () => {\n    const user = await bridge.send('VKWebAppGetUserInfo')\n    const group = getGroupByVKId(user.id)\n    return fetch(`https://test.my.kkep.ru/api.php?method=get_stud_rasp&group=` + group + `&token=` + TOKEN)\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport {\n    Paper,\n    TableRow,\n    TableHead,\n    TableContainer,\n    TableCell,\n    TableBody,\n    Table\n} from '@material-ui/core';\n\nimport {Button, Div, PanelSpinner} from \"@vkontakte/vkui\";\nimport Group from \"@vkontakte/vkui/dist/components/Group/Group\";\nimport {getRasp} from \"../KKEP\";\n\nconst useStyles = makeStyles({\n    table: {\n        maxWidth: 250,\n        minWidth: 250,\n    },\n});\n\n\nclass RaspTable extends React.Component {\n\n    state = {\n        loaded: false,\n        spinner: true,\n        rasp: null,\n        error: null\n    }\n\n    getRasp(){\n        this.setState({loaded: false, spinner: true, error: null})\n        getRasp()\n            .then(async (res) => this.setState({loaded: true, spinner: false, rasp: await res.json()}) )\n            .catch((err) => this.setState({loaded: false, spinner: false, error: err}) )\n    }\n\n    getColor(){\n        const black = {backgroundColor: \"#0a0a0a\", color: \"white\"}\n        if (this.props.colorScheme === \"space_gray\")\n            return black\n    }\n\n    async componentDidMount() {\n        this.getRasp()\n    }\n\n    render() {\n        const classes = useStyles;\n\n        return (\n            <Group>\n                <TableContainer component={Paper} style={this.getColor()}>\n\n                    {this.state.error !== null && <div id='error'>\n                        <h3 style={{color: 'red'}} align=\"center\">Расписание не удалось получить</h3>\n                        <p align=\"center\"><small>{this.state.error.toString()}</small></p>\n                        <Div><Button mode=\"secondary\" size=\"l\" stretched={true} onClick={() => this.getRasp()}>Обновить</Button></Div>\n                    </div>}\n\n                    {this.state.spinner && <PanelSpinner/>}\n\n                    {this.state.loaded && <div id=\"loaded\">\n                        <h2 style={{color: 'cyan'}} align=\"center\">Группа: {this.state.rasp[0].group} Неделя: {this.state.rasp[0].week}</h2>\n                            {this.state.rasp.map((row) => (<div key={row.day_name}>\n                                <h3 align='center'>{row.day_name}</h3>\n                                <Table className={classes.table} key={row.day_name}>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell align=\"left\" style={this.getColor()}>№</TableCell>\n                                            <TableCell align=\"center\" style={this.getColor()}>Преподаватель</TableCell>\n                                            <TableCell align=\"center\" style={this.getColor()}>Дисциплина</TableCell>\n                                            <TableCell align=\"center\" style={this.getColor()}>Ауд.</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {row.pairs.map((row) => ( row.isnull === \"0\" &&\n                                            <TableRow key={row.p_num}>\n                                                <TableCell align=\"left\" style={this.getColor()}>{row.p_num}</TableCell>\n                                                <TableCell align=\"center\" style={this.getColor()}>{row.p_prep}</TableCell>\n                                                <TableCell align=\"center\" style={this.getColor()}>{row.p_subj.replace(\"Ин. язык/Ин. язык\", \"Ин. язык\")}</TableCell>\n                                                <TableCell align=\"center\" style={this.getColor()}>{row.p_aud}</TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </div>))}\n                    </div>}\n\n                </TableContainer>\n            </Group>);\n    }\n\n}\n\nexport default RaspTable;\n","import React from 'react';\n\nimport bridge from '@vkontakte/vk-bridge';\nimport {Button, ConfigProvider, Panel, PanelHeader} from \"@vkontakte/vkui\";\n\nimport RaspTable from \"./js/panel/Table\";\n\nclass App extends React.Component {\n\n    state = {\n        load: false,\n        colorScheme: 'bright_light'\n    }\n\n    async componentDidMount() {\n\n        const VKConnectCallback = (e) => {\n            if (e.detail.type === 'VKWebAppUpdateConfig') {\n                bridge.unsubscribe(VKConnectCallback);\n\n                const colorScheme = e.detail.data.scheme\n                this.setState({load: true, colorScheme: colorScheme})\n\n                document.getElementById(\"body\").setAttribute(\"scheme\", colorScheme)\n\n            }\n        };\n\n        bridge.subscribe(VKConnectCallback);\n        await bridge.send('VKWebAppInit', {})\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const {activeView, activeStory, activePanel, scrollPosition} = this.props;\n\n        if (\n            prevProps.activeView !== activeView ||\n            prevProps.activePanel !== activePanel ||\n            prevProps.activeStory !== activeStory\n        ) {\n            let pageScrollPosition = scrollPosition[activeStory + \"_\" + activeView + \"_\" + activePanel] || 0;\n\n            window.scroll(0, pageScrollPosition);\n        }\n    }\n\n    logState(){\n        console.log(this.state)\n    }\n\n    render() {\n\n        return (this.state.load &&\n            <ConfigProvider isWebView={true} colorScheme={this.state.colorScheme}>\n                <Panel id=\"id\">\n                    <PanelHeader>Расписание</PanelHeader>\n                    <RaspTable colorScheme={this.state.colorScheme}/>\n                </Panel>\n            </ConfigProvider>\n        );\n    }\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './css/main.css';\n\nimport App from './App';\n\nReactDOM.render(\n        <App/>,\n    document.getElementById('root')\n);\nimport(\"./js/eruda\").then(({ default: eruda }) => {}); //runtime download"],"sourceRoot":""}